{"version":3,"sources":["components/AgregarCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","Categorias","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAmB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACjBC,mBAAS,IADQ,mBAC9CC,EAD8C,KAClCC,EADkC,KAarD,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAQP,GAAR,mBAAuBO,OACrCN,EAAc,OAKd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbtB,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,Y,uBCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFGO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDd,SAACA,GAAe,IAAD,EACfd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAczC,OATAC,qBAAU,WACRxB,EAAQC,GAAWwB,MAAK,SAACd,GACvBY,EAAS,CACPf,KAAMG,EACNU,SAAS,SAGZ,CAACpB,IAEGqB,EDZ2BI,CAAazB,GAAjCa,EAD0B,EAChCN,KAAca,EADkB,EAClBA,QAEtB,OACE,oCACE,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GACC,uBAAGJ,UAAU,oCAAb,eAEF,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAagB,IAAKhB,EAAIC,IAAQD,UEKzBiB,EAhBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,cADrB,mBAClB0C,EADkB,KACN3C,EADM,KAEzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAkBA,cAAeA,IACjC,6BACA,4BACG2C,EAAWnB,KAAI,SAACf,GAAD,OACd,kBAAC,EAAD,CAASgC,IAAKhC,EAAGM,UAAWN,UCRtCmC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.e95dd43d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AgregarCategoria = ({ setCategorias }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const txt_Changed = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategorias((c) => [inputValue, ...c]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={txt_Changed} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAgregarCategoria.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (categoria) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    categoria\r\n  )}&limit=10&api_key=luaZrIt0W26q44XPIN3wtwOOGV0RjIE3`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n  const { data: images, loading } = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__bounce\">{categoria}</h3>\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n      )}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(categoria).then((img) => {\r\n      setstate({\r\n        data: img,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AgregarCategoria } from \"./components/AgregarCategoria\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [Categorias, setCategorias] = useState([\"One Punch\"]);\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AgregarCategoria setCategorias={setCategorias} />\r\n      <hr />\r\n      <ol>\r\n        {Categorias.map((c) => (\r\n          <GifGrid key={c} categoria={c} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}